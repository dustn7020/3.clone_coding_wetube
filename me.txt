몽고DB
 - mongosh
 - show dbs : db 보기
 - show collections :테이블 보기
 - use db명 : db 사용
 - db.테이블명.find(), db.테이블명.remove({}) : 테이블 전체보기 및 전체삭제


 몽구스 함수
  - find()
  - findById()
  - findByIdAndUpdate()
  - save()
  - populate() : 참조된 외래키의 나머지 값들을 가져옴


세션 데이터가 쿠키에 저장되지 않음 - session id만 저장
session 데이터는 서버에 저장 - session store에 저장해야 함
connect-mongo는 세션을 mongoDB에 저장함 - 서버가 재시작되더라도 db에 저장되어 있음

 : npm install connect-mongo


깃에 못 올리는 환경 변수들을 설정하기
1. env 파일 만들기
2. env 파일 .gitignore 추가하기
3. 비밀로 해야하는 string을 process.env."환경변수" 로 바꾸기

dotenv 사용하기
-env 파일을 읽어 각각의 변수들을 process.env에 넣음
-dotenv는 여러 언어로 구성
 : npm i dotenv
사용 : require("dotenv").config(); => 파일 전체에서 가장 먼저 사용해야 함.
        -> 모든 파일에서 사용해야 하기 때문에 import 해주어야 함


oauth
1. 사용자를 깃헙으로 보냄
2. 그러면 깃헙은 비밀번호, 보안, 이메일 인증 모든걸 처리해줌
3. 승인된 후에, token과 함께 웹사이트로 돌아오고, 사용자의 정보에 접근할 수 있게 됨


file
multer => 파일 미들웨어, 파일을 업로드 할 수 있게 해줌
 : npm i multer 
**사용방법 
    1. form을 multipart form으로 만들어야 함(multipart/form-data)
    2. 미들웨어 생성
    3. 미들웨어 사용
    4. 이미지 저장


webpack 
- 모든 파일을 받아서 다른 파일들로 변경 처리함.
- 다른 프레임워크에 기본적으로 내장되어 있음
 : npm i webpack webpack-cli -D
 1. webpack.config.js 파일 생성
 2. client 폴더 - js 폴더 - main.js 파일 생성
 3. package.json에 javascript 실행 명령어 생성
 4. : npm install -D babel-loader 설치
 5. 서버에 assets 폴더 위치 알려주기

 scss를 변형시켜주는 2개의 loader 설치하기
  : npm install sass-loader sass webpack --save-dev
  : npm install --save-dev css-loader
  : npm install --save-dev style-loader

=> webpack은 초기설정에 잘 해두면 나중엔 건드릴 일이 없는 거 같음

MinCssExtractPlugin
- css 코드들을 따로 분리시킴
 : npm install --save-dev mini-css-extract-plugin

